---
// --- コンポーネントとアセットのインポート ---
import Header from "../components/header.astro";
import { Image } from 'astro:assets';
import profileimg from `../assets/IMG_1455.PNG`;
import Footer from "../components/footer.astro";

// --- ページ情報 ---
const pageTitle = "Profile";
const userName = "Ryo";

// --- データ ---
const history = {
  education: [
    { period: "2019~2024", name: "NITTC (豊田高専)" },
    { period: "2024~", name: "TUT (豊橋技術科学大学)" },
  ],
  experiences: [
    { title: "KKDJの元店員", icon: "store" },
    { title: "R5年度20歳の集い(成人式)", description: "役割 : 司会と動画編集", icon: "event" },
    { title: "アメリカでのホームステイ", description: "期間 : 1ヶ月", icon: "flight" },
    { title: "HackU in Kanazawa", description: "ハッカソン出場", icon: "code" },
  ]
};

const otherLinks = [
  { name: "Github", url: "https://github.com/KRKWRT", description: "私のGitHubアカウントはこちらから", icon: "code_blocks" },
  { name: "しずかなインターネット", url: "https://github.com/KRKWRT", description: "趣味のことを書いています", icon: "article"},
]

---
<html lang="ja">
<head>
  <meta charset="utf-8" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <title>{pageTitle} | {userName}</title>

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
</head>

<body>
  <Header />

  <main class="main-content">

    <section class="hero-section">
      <div class="hero-image-wrapper">
        <Image src={profileimg} alt=`A photo of ${userName}` width="240" height="240" class="profile-image"/>
      </div>
      <div class="hero-text-wrapper">
        <p class="hero-intro">Engineering Student</p>
        <h1 class="user-name">{userName}</h1>
        <p class="greeting">
          私のサイトにようこそ！ 現在、豊橋技術科学大学に在学中です。
          ここでは私の学習記録や趣味について発信していきます。
        </p>
        <div class="social-links">
          <a href="https://github.com/KRKWRT" target="_blank" rel="noopener noreferrer" class="social-link">
            <span class="material-symbols-outlined">Face</span>
            <span>Wantedly</span>
          </a>
      </div>
    </div>
    </section>

    <section class="content-section">
      <h2 class="section-title">History</h2>
      <div class="history-container">
        <div class="education-path">
          {history.education.map(edu => (
              <div class="edu-item fade-in-up">
                <span class="edu-period">{edu.period}</span>
                <span class="edu-name">{edu.name}</span>
              </div>
          ))}
        </div>
        <div class="experience-grid">
          {history.experiences.map(exp => (
            <div class="card">
              <span class="material-symbols-outlined card-icon">{exp.icon}</span>
              <h3 class="card-title">{exp.title}</h3>
              {exp.description && <p class="card-description">{exp.description}</p>}
            </div>
          ))}
        </div>
      </div>
    </section>

    <section class="content-section">
      <h2 class="section-title">Others</h2>
      <div class="links-container">
        {otherLinks.map(link => (
          <a href={link.url} class="link-item fade-in-up" target="_blank" rel="noopener noreferrer">
            <div class="link-icon-wrapper">
              <span class="material-symbols-outlined">{link.icon}</span>
            </div>
            <div class="link-info">
              <h3 class="link-title">{link.name}</h3>
              <p class="link-description">{link.description}</p>
            </div>
            <span class="material-symbols-outlined link-arrow">arrow_forward</span>
          </a>
        ))}
      </div>
    </section>

  </main>

  <Footer />

  <style is:global>
    /* --- グローバルスタイル & CSSリセット --- */
    :root {
      --color-background: #ffffff;
      --color-background-body: #f7f9fc; /* Bodyの背景色 */
      --color-text-primary: #202124;
      --color-text-secondary: #5f6368;
      --color-accent: #1a73e8;
      --color-accent-light: #6e9fff;
      --color-border: #dadce0;
      --font-family-base: 'Noto Sans JP', sans-serif;
      --shadow-smooth: 0 4px 12px rgba(0, 0, 0, 0.05), 0 8px 24px rgba(0, 0, 0, 0.05);
      --gradient-accent: linear-gradient(45deg, var(--color-accent), var(--color-accent-light));
    }
    *, *::before, *::after {
      box-sizing: border-box;
    }
    body {
      margin: 0;
      font-family: var(--font-family-base);
      background-color: var(--color-background);
      color: var(--color-text-primary);
      line-height: 1.7;
    }
    h1, h2, h3 ,h4{
      font-weight: 700;
      line-height: 1.3;
    }
    p {
      margin-top: 0;
    }
    a {
      color: var(--color-accent);
      text-decoration: none;
    }
    a:hover {
      text-decoration: underline;
    }
  </style>

  <style>
    /* --- コンポーネントスタイル --- */
    .main-content {
      max-width: 900px;
      margin: 0 auto;
      padding: calc(70px + 4rem) 1.5rem 6rem;
    }

    /* セクション共通 */
    .content-section {
      margin-top: 4rem;
    }
    .section-title {
      font-size: 2.8rem;
      text-align: center;
      margin-bottom: 4rem;
      position: relative;
      display: inline-block;
      left: 50%;
      transform: translateX(-50%);
      padding-bottom: 0.5rem;
    }
    .section-title::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 50px;
      height: 4px;
      background: var(--gradient-accent);
      border-radius: 2px;
    }

    /* ヒーローセクション */
    .hero-section {
      display: flex;
      align-items: center;
      gap: 3rem;
    }
    .hero-image-wrapper {
      flex-shrink: 0;
      width: 240px;
      height: 240px;
      transition: width 0.3s ease, height 0.3s ease; /* サイズ変更を滑らかに */
    }
    .profile-image {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      border: 6px solid var(--color-background);
      box-shadow: 0 0 0 2px var(--color-accent), var(--shadow-smooth);
    }
    .hero-text-wrapper {
      text-align: left;
    }
    .hero-intro {
      color: var(--color-accent);
      font-weight: 700;
      margin-bottom: 0.5rem;
    }
    .user-name {
      font-size: 3rem;
      font-weight: 900;
      margin: 0 0 1rem;
    }
    .greeting {
      font-size: 1.1rem;
      color: var(--color-text-secondary);
      max-width: 600px;
      margin-bottom: 1.5rem;
    }
    .social-links {
      display: flex;
      gap: 1rem;
    }
    .social-link {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      background-color: #eef2f6;
      padding: 0.6rem 1.2rem;
      border-radius: 8px;
      color: var(--color-text-primary);
      font-weight: 700;
      text-decoration: none;
      transition: all 0.2s ease;
    }
    .social-link:hover {
      background-color: var(--color-accent);
      color: white;
      transform: translateY(-2px);
      text-decoration: none;
    }
    .social-link .material-symbols-outlined {
      font-size: 1.2rem;
    }

    /* Historyセクション */
    .history-container {
      display: flex;
      flex-direction: column;
      gap: 4rem;
    }

    .education-path {
      display: flex;
      flex-direction: column; /* 要素を縦に並べる */
      align-items: center;
      position: relative;
      gap: 2rem;
    }
    .education-path::before {
      content: '';
      position: absolute;
      top: 20px;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      width: 3px;
      background-color: var(--color-border);
      border-radius: 2px;
    } 
    .edu-item {
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      position: relative;
      z-index: 1;
      opacity: 0;
      transform: translateY(30px);
      transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }
    .edu-item::before {
      content: '';
      width: 20px;
      height: 20px;
      background: var(--gradient-accent);
      border: 4px solid var(--color-background-body);
      border-radius: 50%;
      margin-bottom: 1rem;
    }
    .edu-period {
      font-size: 0.9rem;
      color: var(--color-text-secondary);
      margin-bottom: 0.25rem;
    }
    .edu-name {
      margin: 0;
      font-size: 1.25rem;
    }
    .edu-item.in-view {
      opacity: 1;
      transform: translateY(0);
    }


    .experience-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 1.5rem;
    }
    .card {
      background-color: var(--color-background);
      border: 1px solid var(--color-border);
      border-radius: 16px; /* 角をより丸く */
      padding: 2rem;
      text-align: center;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      box-shadow: var(--shadow-smooth);
      border-top: 5px solid; /* 上部ボーダー用のスペース */
      border-top-color: var(--color-accent);
    }
    .card:hover {
      transform: translateY(-8px);
      box-shadow: 0 8px 16px rgba(0,0,0,0.08), 0 16px 32px rgba(0,0,0,0.06);
    }
    .card-icon {
      font-size: 3rem;
      color: var(--color-accent);
    }
    .card-title {
      margin: 0.75rem 0 0.5rem;
      font-size: 1.25rem;
    }
    .card-description {
      color: var(--color-text-secondary);
      font-size: 1rem;
      margin-bottom: 0;
    }

    /* Othersセクション */
    .links-container {
      border: 1px solid var(--color-border);
      border-radius: 16px;
      background-color: var(--color-background);
      box-shadow: var(--shadow-smooth);
      overflow: hidden; /* 角丸を維持するため */
    }
    .link-item {
      display: flex;
      align-items: center;
      padding: 1.25rem 1.5rem;
      gap: 1.5rem;
      transition: background-color 0.2s ease;
      border-bottom: 1px solid var(--color-border);
    }
    .link-item:last-child {
      border-bottom: none;
    }
    .link-item:hover {
      background-color: #f7f9fc;
      text-decoration: none;
    }
    .link-icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      width: 48px;
      height: 48px;
      background-color: #eef2f6;
      border-radius: 12px;
      color: var(--color-text-secondary);
      font-size: 1.75rem;
      transition: background-color 0.2s ease, color 0.2s ease;
    }
    .link-item:hover .link-icon-wrapper {
      background-color: var(--color-accent);
      color: var(--color-background);
    }
    .link-info {
      flex: 1; /* 横幅を柔軟に保つ */
      min-width: 0; /* はみ出しを防ぐ */
    }
    .link-title {
      margin: 0 0 0.1rem;
      color: var(--color-text-primary);
      font-size: 1.1rem;
      transition: color 0.2s ease;
    }
    .link-item:hover .link-title {
      color: var(--color-accent);
      text-decoration: underline;
    }
    .link-description {
      margin: 0;
      color: var(--color-text-secondary);
      font-size: 0.9rem;
      word-wrap: break-word;
    }
    .link-arrow {
      color: var(--color-text-secondary);
      transition: transform 0.3s ease;
    }
    .link-item:hover .link-arrow {
      transform: translateX(5px);
    }

    /* レスポンシブ対応 */
    @media (max-width: 600px) {
      .section-title {
         font-size: 2.2rem;
      }
      .user-name {
        font-size: 2.8rem;
      }
      /* タイムラインの縦線を左端に寄せる */
      .education-path {
        align-items: flex-start;
      }
      .education-path::before {
        left: 9px; /* 点の中心に合わせる */
      }
      .edu-item {
        align-items: flex-start;
        text-align: left;
        padding-left: 40px;
      }
      .edu-item::before {
        position: absolute;
        left: 0;
        top: 2px;
        margin-bottom: 0;
        width: 18px; /* 少し小さく */
        height: 18px;
      }
    }
    @media (max-width: 768px) {
      .hero-section { flex-direction: column; text-align: center; }
      .hero-text-wrapper { display: flex; flex-direction: column; align-items: center; }
      .hero-image-wrapper {
        width: 180px;
        height: 180px;
      }
    }
  </style>

  <script>
    // スクロールで表示された要素に in-view クラスを追加
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add("in-view");
          observer.unobserve(entry.target); // 一度だけ発火
        }
      });
    }, { threshold: 0.1 });
  
    document.querySelectorAll('.fade-in-up').forEach(el => {
      observer.observe(el);
    });
  </script>
</html>